CREATE TABLE IF NOT EXISTS User (
	UserID INTEGER PRIMARY KEY AUTOINCREMENT,
	UserName TEXT UNIQUE NOT NULL,
	UserPasswordSha1 BLOB NOT NULL
);

CREATE TABLE IF NOT EXISTS Room (
	RoomID INTEGER PRIMARY KEY AUTOINCREMENT,
	RoomName TEXT,
	RoomCreateTime NUMERIC NOT NULL
	-- RoomOwner INTEGER REFERENCES User(UserID) ON DELETE CASCADE ON UPDATE CASCADE,
	-- RoomDescription TEXT
);

CREATE TABLE IF NOT EXISTS Msg (
	MsgID INTEGER PRIMARY KEY AUTOINCREMENT,
	MsgSender INTEGER REFERENCES User(UserID) ON DELETE CASCADE ON UPDATE CASCADE NOT NULL,
	RoomID INTEGER REFERENCES Room(RoomID) ON DELETE CASCADE ON UPDATE CASCADE NOT NULL,
	MsgType INTEGER NOT NULL,
	MsgContent TEXT NOT NULL,
	MsgSendtime NUMERIC NOT NULL
);

CREATE TABLE IF NOT EXISTS RoomMember (
	RoomID INTEGER REFERENCES Room(RoomID) ON DELETE CASCADE ON UPDATE CASCADE,
	UserID INTEGER REFERENCES User(UserID) ON DELETE CASCADE ON UPDATE CASCADE,
	-- LastRead INTEGER REFERENCES Msg(MsgID)
	PRIMARY KEY (RoomID, UserID)
);

CREATE TABLE IF NOT EXISTS RoomAdmin (
	RoomID INTEGER REFERENCES Room(RoomID) ON DELETE CASCADE ON UPDATE CASCADE,
	UserID INTEGER REFERENCES User(UserID) ON DELETE CASCADE ON UPDATE CASCADE,
	PRIMARY KEY (RoomID, UserID)
);

-- CREATE TABLE IF NOT EXISTS UserBlock (
-- 	RoomID INTEGER REFERENCES Room(RoomID) ON DELETE CASCADE ON UPDATE CASCADE,
-- 	UserID INTEGER REFERENCES User(UserID) ON DELETE CASCADE ON UPDATE CASCADE
-- );

CREATE INDEX IF NOT EXISTS idx_Msg_MsgSendtime ON Msg(MsgSendtime);

CREATE TRIGGER IF NOT EXISTS CheckMsgInsert
BEFORE INSERT ON Msg
BEGIN
    SELECT
    CASE
        WHEN NEW.MsgSender NOT IN (SELECT UserID FROM RoomMember WHERE RoomID = NEW.RoomID)
        THEN RAISE(ABORT, 'User is not a member of the room')
    END;
END;

CREATE TRIGGER IF NOT EXISTS CheckRoomMemberDelete
BEFORE DELETE ON RoomMember
BEGIN
    SELECT
    CASE
        WHEN OLD.UserID NOT IN (SELECT UserID FROM RoomMember WHERE RoomID = OLD.RoomID)
        THEN RAISE(ABORT, 'User is not a member of the room')
    END;
END;

CREATE TRIGGER IF NOT EXISTS RemoveAdminOnMemberExit
AFTER DELETE ON RoomMember
BEGIN
    DELETE FROM RoomAdmin WHERE RoomID = OLD.RoomID AND UserID = OLD.UserID;
END;

CREATE TRIGGER IF NOT EXISTS CheckRoomAdminNotNull
AFTER DELETE ON RoomAdmin
BEGIN
    DELETE FROM Room
    WHERE RoomID = OLD.RoomID
    AND NOT EXISTS (SELECT 1 FROM RoomAdmin WHERE RoomID = OLD.RoomID);
END;

CREATE TRIGGER IF NOT EXISTS CheckRoomMemberNotNull
AFTER DELETE ON RoomMember
BEGIN
    DELETE FROM Room
    WHERE RoomID = OLD.RoomID
    AND NOT EXISTS (SELECT 1 FROM RoomMember WHERE RoomID = OLD.RoomID);
END;

INSERT INTO User(UserName, UserPasswordSha1)
VALUES ("AIBot", "356a192b7913b04c54574d18c28d46e6395428ab")